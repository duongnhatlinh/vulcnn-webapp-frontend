import React from "react";
import CodeDisplay from "../common/CodeDisplay";

const VulnerabilityDetail = ({ vulnerability }) => {
  if (!vulnerability) return null;

  // Map vulnerability field names from API to component expectations
  const {
    vulnerability_type,
    type,
    severity,
    description,
    function_name,
    line_number,
    code_snippet,
    cwe_id,
    recommendation,
  } = vulnerability;

  // Choose appropriate field based on API response
  const vulnType = vulnerability_type || type;
  const functionName = function_name;
  const lineNumber = line_number;
  const codeSnippet = code_snippet;

  const severityClasses = {
    high: {
      bg: "bg-red-50",
      border: "border-red-400",
      title: "text-red-800",
      text: "text-red-700",
    },
    medium: {
      bg: "bg-yellow-50",
      border: "border-yellow-400",
      title: "text-yellow-800",
      text: "text-yellow-700",
    },
    low: {
      bg: "bg-blue-50",
      border: "border-blue-400",
      title: "text-blue-800",
      text: "text-blue-700",
    },
  };

  const classes = severityClasses[severity] || severityClasses.medium;

  return (
    <div
      className={`mt-4 ${classes.bg} border-l-4 ${classes.border} p-4 rounded-md`}
    >
      <div className="flex">
        <div className="flex-shrink-0">
          <svg
            className={`h-5 w-5 ${
              severity === "high"
                ? "text-red-400"
                : severity === "medium"
                ? "text-yellow-400"
                : "text-blue-400"
            }`}
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d={
                severity === "high"
                  ? "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                  : "M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
              }
            />
          </svg>
        </div>
        <div className="ml-3">
          <h3 className={`text-sm font-medium ${classes.title}`}>
            {vulnType} {cwe_id ? `(${cwe_id})` : ""}
          </h3>
          <div className={`mt-2 text-sm ${classes.text}`}>
            <p>{description}</p>
            {functionName && (
              <p className="mt-1">
                <strong>Function:</strong> {functionName}
                {lineNumber ? (
                  <span>
                    , <strong>Line:</strong> {lineNumber}
                  </span>
                ) : null}
              </p>
            )}
          </div>

          {codeSnippet && (
            <div className="mt-2">
              <div className="text-sm font-medium mb-1">Vulnerable Code:</div>
              <CodeDisplay
                code={codeSnippet}
                language="c"
                highlightedLines={[1]} // Typically line 1 in the snippet
              />
            </div>
          )}

          {recommendation && (
            <div className="mt-2">
              <div className={`text-sm font-medium ${classes.title}`}>
                Recommendation:
              </div>
              <p className={`text-sm ${classes.text} mt-1`}>{recommendation}</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDetail;
